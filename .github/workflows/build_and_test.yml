name: Build & Test

concurrency:
  group: build-${{ github.sha }}
  cancel-in-progress: true

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels_unix:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ "3.12" ]
        implementation: [ "cpython", "pypy" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install build tools
        run: |
          pip install --upgrade pip setuptools wheel Cython cibuildwheel "numpy>=1.21,<2"

      # Install project and test dependencies then run pytest
      - name: Install project and test dependencies
        run: |
          pip install -e .
          pip install -r requirements-dev.txt

      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -q

      # Pre-install virtualenv to avoid download rate limits in cibuildwheel
      - name: Pre-install virtualenv
        run: pip install virtualenv==20.30.0

      - name: Build wheels
        env:
          CIBW_MANYLINUX_VERSION: "2014"
          CIBW_BEFORE_ALL: "pip install virtualenv==20.30.0"
        run: cibuildwheel --output-dir wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.implementation }}
          path: wheelhouse/*.whl


# This job builds wheels for Windows using MSYS2 and MinGW-w64
# It seems that only the 3.12 CPython build is available in the MSYS2 repository
# so we are not building for 3.11 or 3.10

  build:
    runs-on: windows-latest   # ← use windows-latest here

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Set up MSYS2 + MinGW64
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: |
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-python

      # (Optional) Cache MSYS2 packages between runs
      - name: Cache MSYS2 pacman packages
        uses: actions/cache@v3
        with:
          path: C:\msys64\var\cache\pacman\pkg
          key: ${{ runner.os }}-pacman-${{ hashFiles('**/spinOps/c_code/**') }}

      - name: Install Python build deps
        run: pip install --upgrade pip setuptools wheel Cython "numpy>=1.21,<2"

      - name: Build Cython extension
        shell: bash -l {0}
        run: |
          python setup.py build_ext --inplace

      - name: Install package & dev requirements
        run: |
          pip install -e .
          pip install -r requirements-dev.txt

      - name: Run tests
        shell: bash -l {0}
        run: pytest --maxfail=1 --disable-warnings -q

  publish:
    needs: [build_wheels_unix, build-windows]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code at tagged commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Flatten wheel directory
        run: |
          mkdir -p dist-flat
          find dist -type f -exec mv {} dist-flat/ \;
          rm -rf dist
          mv dist-flat dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist/

