name: Build Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels_unix:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ "3.12" ]
        implementation: [ "cpython", "pypy" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build tools
        run: |
          pip install --upgrade pip setuptools wheel Cython cibuildwheel "numpy>=1.21,<2"
      - name: Build wheels
        env:
          # For Linux builds, you can control the manylinux image.
          # (For macOS, this variable is ignored.)
          CIBW_MANYLINUX_VERSION: "2014"
        run: |
          if [ "${{ matrix.implementation }}" = "cpython" ]; then
              cibuildwheel --output-dir wheelhouse
          elif [ "${{ matrix.implementation }}" = "pypy" ]; then
              cibuildwheel --output-dir wheelhouse
          fi
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.implementation }}
          path: wheelhouse/*.whl


# This job builds wheels for Windows using MSYS2 and MinGW-w64
# It seems that only the 3.12 CPython build is available in the MSYS2 repository
# so we are not building for 3.11 or 3.10
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ "3.12" ]
        implementation: [ "cpython", "pypy" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Provide a modern CPython for wheel building
      - name: Setup host Python
        id: host-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          python-implementation: ${{ matrix.implementation }}
          check-latest: true

      # Install MSYS2 environment and MinGW-w64 toolchain
      - name: Setup MSYS2 and MinGW toolchain
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: |
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-python
      - name: Add MinGW64 to PATH
        shell: pwsh
        run: |
          $mingw = "${{ runner.temp }}\msys64\mingw64\bin"
          "${mingw}" | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append
      - name: Alias Python import library
        shell: pwsh
        run: |
          $lib = Join-Path $Env:RUNNER_TEMP 'msys64\mingw64\lib\libpython3.12.dll.a'
          $dest = Join-Path $Env:RUNNER_TEMP 'msys64\mingw64\lib\libpython312.dll.a'
          if (Test-Path $lib) { Copy-Item $lib $dest -Force }
      - name: Install build tools
        shell: pwsh
        run: |
          & "${{ env.pythonLocation }}\python.exe" -m pip install --upgrade pip setuptools wheel Cython "numpy>=1.21,<2"
      - name: Build wheel via pip
        shell: pwsh
        env:
          CC: x86_64-w64-mingw32-gcc
          CXX: x86_64-w64-mingw32-g++
          LIBRARY_PATH: ${{ runner.temp }}/msys64/mingw64/lib
          LDFLAGS: "-L${{ runner.temp }}/msys64/mingw64/lib"
        run: |
          & "${{ env.pythonLocation }}\python.exe" -m pip wheel . --no-deps --wheel-dir wheelhouse
      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: spinops-windows-${{ matrix.python-version }}-${{ matrix.implementation }}
          path: wheelhouse/*.whl

